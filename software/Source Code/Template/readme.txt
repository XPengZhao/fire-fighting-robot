////////////////////////////////////////////////////////////////////////////////
 * CORE用来存放核心文件和启动文件。该文件夹一般无需编辑。
 * core_cm3.c和core_cm3.h文件位于官方固件库中的\Libraries\CMSIS\CM3\CoreSupport 目录
 下面的，这个就是 CMSIS 核心文件，提供进入 M3 内核接口，这是 ARM 公司提供，对所有 CM3 内核
 的芯片都一样。
 * 在 DeviceSupport\ST\STM32F10x\startup\arm 文件夹中，存放着另外一个启动文件。在该文件
 夹中我们可以看到 8 个 startup 开头的.s 文件。开发板采用的 103VCT6 是属于大容量产品，所以
 我们的启动文件选择 startup_stm32f10x_hd.s。启动文件主要是进行堆栈之类的初始化，中断向量表
 以及中断函数定义。启动文件要引导进入main 函数。
//

 ///////////////////////////////////////////////////////////////////////////////
 * OBJ 是用来存放编译过程文件以及hex 文件。
 //

////////////////////////////////////////////////////////////////////////////////
 * STM32F10x_FWLib 文件夹用来存放 ST 官方提供的库函数源码文件。src 存放的是固件库的.c 文
 件，inc 存放的是对应的.h 文件。这里的文件也是固件库的核心文件，每个外设对应一组文件。例如
 GPIO的外设库文件就放在这里。
 * 在写代码时，如果我们只是用到了其中的某些外设，我们就可以不用添加没有用到的外设的库文件。例如
 我们只用到了GPIO，我们只用添加 stm32f10x_gpio.c 而其他的不用添加。全部添加虽然比较方便，但
 是工程太大，编译速度慢。还有另一种方法，就是在 USER 文件夹中，打开stm32f10x_conf.h 文件，
 可以看到一堆的#include,这里你建立工程的时候，可以注释掉一些你不用的外设头文件。
//

////////////////////////////////////////////////////////////////////////////////
 * USER和SYSTEM中文件的作用见各自文件夹中的readme.txt